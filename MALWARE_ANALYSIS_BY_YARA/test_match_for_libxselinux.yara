//Normal string matching

rule test_NOP { 

    meta : 

        description = "Let's see if the file has nops"
        author = "Saha Kuljit Shantanu"
        date = "05-03-2024"

    strings :

        $nop = "NOP" nocase

    
    condition: 

        $nop
    
    
}

//Matching with regular expressions

rule test_SCAN_PRINT { 

    meta : 

        description = "Let's see if the file has scanning and printing properties"
        author = "Saha Kuljit Shantanu"
        date = "05-03-2024"

    strings :

        
        $scan = /[a-z]{0,}scanf[a-z]{0,}/   
        $print = /[a-z]{0,}printf[a-z]{0,}/
        $get = /[a-z]{0,}get[a-z]{0,}/   
        $put = /[a-z]{0,}put[a-z]{0,}/

    
    condition: 

        $scan or $print or $get or $put
    
    
}

//Matching with hex strings

rule is_FILE_OUT {

    meta : 

        description = "Let's see if the file has scanning and printing properties"
        author = "Saha Kuljit Shantanu"
        date = "05-03-2024"

    strings :

        $is_out = { ?? 45 4C 46 }

    condition:

        $is_out


}

//Matching any n of all conditions

rule is_CALLING_SYSTEM {

    meta : 

        description = "Let's see if the file has scanning and printing properties"
        author = "Saha Kuljit Shantanu"
        date = "05-03-2024"

    strings :

        $str = "fclose"
        $fopen = "fopen"
        $sleep = "sleep"

    condition:

        2 of them


}



//Mtching register access

rule is_ACCESSING_REGISTER {

    meta : 

        description = "Let's see if the file has scanning and printing properties"
        author = "Saha Kuljit Shantanu"
        date = "05-03-2024"

    strings :

        $eax = "%eax"
        $rbp = "rbp"
        $rdi = "rdi"
        $rsp = "rsp"
        $rax = "rax"
        $zero = "0xe"

    condition:

        any of them


}